{
  "version": 3,
  "sources": ["../../src/ui/math.ts"],
  "sourcesContent": ["import { Hit, State } from \"../config\";\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface MovingPoint extends Point {\n  xVelocity: number;\n  yVelocity: number;\n}\n\ninterface MovingCircle extends Point {\n  radius: number;\n  xVelocity: number;\n  yVelocity: number;\n}\n\ninterface MovingLine {\n  xVelocity: number;\n  yVelocity: number;\n  p1: Point;\n  p2: Point;\n}\n\ninterface Intercept {\n  time: number;\n  point: Point;\n  edge: boolean;\n}\n\nexport const zMultiplier = 5;\n\nfunction getY(a: number, x: number, hitPoint: Point, landX: number) {\n  let x1 = hitPoint.x;\n  let y1 = hitPoint.y;\n  let x2 = landX;\n  let y2 = 0;\n\n  if (landX > hitPoint.x) {\n    x1 = hitPoint.x;\n    y1 = hitPoint.y;\n    x2 = hitPoint.x - (landX - hitPoint.x);\n    y2 = 0;\n    x = hitPoint.x - (x - hitPoint.x);\n  }\n\n  const b = (y2 - y1) / (x2 - x1) - a * (x1 + x2);\n  const c = y1 - (x1 * (y2 - y1)) / (x2 - x1) + a * x1 * x2;\n  const width = 2 * (-b / (2 * a) - x2);\n  const xBounded = (Math.abs(x - x2) % width) + x2;\n  const y = a * xBounded ** 2 + b * xBounded + c;\n\n  return y;\n}\n\nexport function getBallZ(ballX: number, { hitX, hitZ, landX }: Hit) {\n  let aDenominator = 30;\n\n  for (; aDenominator > 0; aDenominator -= 5) {\n    if (\n      4 <\n      getY(-1 / aDenominator, 0, { x: hitX, y: hitZ }, landX) / zMultiplier\n    ) {\n      break;\n    }\n  }\n\n  const z =\n    getY(\n      -1 / Math.max(1, aDenominator - 0.6),\n      ballX,\n      { x: hitX, y: hitZ },\n      landX\n    ) / zMultiplier;\n\n  if (Number.isNaN(z)) {\n    return 0;\n  } else {\n    return z;\n  }\n}\n\nexport function getCircleLineIntercept(\n  circle: MovingCircle,\n  line: MovingLine\n): Intercept | null {\n  const getEdgeIntercept = () => {\n    const edge1Intercept = getCirclePointIntercept(circle, {\n      x: line.p1.x,\n      y: line.p1.y,\n      xVelocity: line.xVelocity,\n      yVelocity: line.yVelocity,\n    });\n    const edge2Intercept = getCirclePointIntercept(circle, {\n      x: line.p2.x,\n      y: line.p2.y,\n      xVelocity: line.xVelocity,\n      yVelocity: line.yVelocity,\n    });\n\n    if (!edge1Intercept || !edge2Intercept) {\n      return edge1Intercept ?? edge2Intercept ?? null;\n    }\n\n    if (edge1Intercept.time < edge2Intercept.time) {\n      return edge1Intercept;\n    } else {\n      return edge2Intercept;\n    }\n  };\n\n  const a = line.p2.x;\n  const b = line.xVelocity;\n  const c = line.p1.x;\n  const d = line.p1.y;\n  const e = line.yVelocity;\n  const f = circle.y;\n  const g = circle.yVelocity;\n  const h = circle.x;\n  const i = circle.xVelocity;\n  const j = line.p2.y;\n  const k = circle.radius;\n\n  // Solve for t\n  // k=abs((a+t*b-(c+t*b))*(d+t*e-(f+t*g))-(c+t*b-(h+t*i))*(j+t*e-(d+t*e)))/sqrt((a+t*b-(c+t*b))**2+(j+t*e-(d+t*e))**2)\n\n  // prettier-ignore\n  const time=(-2*d*e*a**2+2*e*f*a**2+2*d*g*a**2-2*f*g*a**2-2*b*d**2*a+2*c*d*e*a+2*b*d*f*a-4*c*e*f*a-2*c*d*g*a+4*c*f*g*a+2*d*e*h*a-2*d*g*h*a+2*d**2*i*a-2*d*f*i*a+2*b*d*j*a+2*c*e*j*a-2*b*f*j*a-2*c*g*j*a-2*e*h*j*a+2*g*h*j*a-2*d*i*j*a+2*f*i*j*a-2*b*c*j**2+2*b*h*j**2+2*c*i*j**2-2*h*i*j**2-2*b*c*d*f+2*c**2*e*f-2*c**2*f*g+2*b*d**2*h-2*c*d*e*h+2*c*d*g*h+2*c*d*f*i-2*d**2*h*i+2*b*c*d*j-2*c**2*e*j+2*b*c*f*j+2*c**2*g*j-4*b*d*h*j+2*c*e*h*j-2*c*g*h*j-2*c*d*i*j-2*c*f*i*j+4*d*h*i*j-Math.sqrt((2*d*e*a**2-2*e*f*a**2-2*d*g*a**2+2*f*g*a**2+2*b*d**2*a-2*c*d*e*a-2*b*d*f*a+4*c*e*f*a+2*c*d*g*a-4*c*f*g*a-2*d*e*h*a+2*d*g*h*a-2*d**2*i*a+2*d*f*i*a-2*b*d*j*a-2*c*e*j*a+2*b*f*j*a+2*c*g*j*a+2*e*h*j*a-2*g*h*j*a+2*d*i*j*a-2*f*i*j*a+2*b*c*j**2-2*b*h*j**2-2*c*i*j**2+2*h*i*j**2+2*b*c*d*f-2*c**2*e*f+2*c**2*f*g-2*b*d**2*h+2*c*d*e*h-2*c*d*g*h-2*c*d*f*i+2*d**2*h*i-2*b*c*d*j+2*c**2*e*j-2*b*c*f*j-2*c**2*g*j+4*b*d*h*j-2*c*e*h*j+2*c*g*h*j+2*c*d*i*j+2*c*f*i*j-4*d*h*i*j)**2-4*(e**2*a**2+g**2*a**2-2*e*g*a**2-2*c*e**2*a-2*c*g**2*a+2*b*d*e*a-2*b*d*g*a+4*c*e*g*a-2*d*e*i*a+2*d*g*i*a-2*b*e*j*a+2*b*g*j*a+2*e*i*j*a-2*g*i*j*a+b**2*d**2+c**2*e**2+c**2*g**2+d**2*i**2+b**2*j**2+i**2*j**2-2*b*i*j**2-2*b*c*d*e+2*b*c*d*g-2*c**2*e*g-2*b*d**2*i+2*c*d*e*i-2*c*d*g*i-2*d*i**2*j-2*b**2*d*j+2*b*c*e*j-2*b*c*g*j+4*b*d*i*j-2*c*e*i*j+2*c*g*i*j)*(d**2*a**2+f**2*a**2-k**2*a**2-2*d*f*a**2-2*c*f**2*a+2*c*k**2*a+2*c*d*f*a-2*d**2*h*a+2*d*f*h*a-2*c*d*j*a+2*c*f*j*a+2*d*h*j*a-2*f*h*j*a+c**2*f**2+d**2*h**2+c**2*j**2+h**2*j**2-2*c*h*j**2-c**2*k**2-d**2*k**2-j**2*k**2+2*d*j*k**2-2*c*d*f*h-2*d*h**2*j-2*c**2*f*j+2*c*d*h*j+2*c*f*h*j)))/(2*(e**2*a**2+g**2*a**2-2*e*g*a**2-2*c*e**2*a-2*c*g**2*a+2*b*d*e*a-2*b*d*g*a+4*c*e*g*a-2*d*e*i*a+2*d*g*i*a-2*b*e*j*a+2*b*g*j*a+2*e*i*j*a-2*g*i*j*a+b**2*d**2+c**2*e**2+c**2*g**2+d**2*i**2+b**2*j**2+i**2*j**2-2*b*i*j**2-2*b*c*d*e+2*b*c*d*g-2*c**2*e*g-2*b*d**2*i+2*c*d*e*i-2*c*d*g*i-2*d*i**2*j-2*b**2*d*j+2*b*c*e*j-2*b*c*g*j+4*b*d*i*j-2*c*e*i*j+2*c*g*i*j));\n\n  if (Number.isNaN(time) || !Number.isFinite(time) || time > 1 || time < 0) {\n    return getEdgeIntercept();\n  }\n\n  const lineInterceptP1: Point = {\n    x: line.p1.x + line.xVelocity * time,\n    y: line.p1.y + line.yVelocity * time,\n  };\n\n  const lineInterceptP2: Point = {\n    x: line.p2.x + line.xVelocity * time,\n    y: line.p2.y + line.yVelocity * time,\n  };\n\n  const angle =\n    Math.atan2(\n      lineInterceptP2.y - lineInterceptP1.y,\n      lineInterceptP2.x - lineInterceptP1.x\n    ) +\n    Math.PI / 2;\n\n  const point: Point = {\n    x: circle.x + circle.xVelocity * time + Math.cos(angle) * circle.radius,\n    y: circle.y + circle.yVelocity * time + Math.sin(angle) * circle.radius,\n  };\n\n  const lineMidPoint: Point = {\n    x: (lineInterceptP2.x - lineInterceptP1.x) / 2 + lineInterceptP1.x,\n    y: (lineInterceptP2.y - lineInterceptP1.y) / 2 + lineInterceptP1.y,\n  };\n\n  if (dist(point, lineMidPoint) > dist(lineInterceptP1, lineInterceptP2) / 2) {\n    return getEdgeIntercept();\n  }\n\n  return { time, point, edge: false };\n}\n\nfunction getCirclePointIntercept(\n  circle: MovingCircle,\n  point: MovingPoint\n): Intercept | null {\n  const a = circle.radius;\n  const b = circle.x;\n  const c = circle.xVelocity;\n  const d = point.x;\n  const e = point.xVelocity;\n  const f = circle.y;\n  const g = circle.yVelocity;\n  const h = point.y;\n  const j = point.yVelocity;\n\n  // Solve for t\n  // circle.radius = Math.sqrt(\n  //   ((circle.x + circle.xVelocity * t) - (point.x + point.xVelocity * t)) ** 2 +\n  //   ((circle.y + circle.yVelocity * t) - (point.y + point.yVelocity * t)) ** 2\n  // )\n\n  // prettier-ignore\n  const time = (-Math.sqrt((2*b*c-2*b*e-2*c*d+2*d*e+2*f*g-2*f*j-2*g*h+2*h*j)**2-4*(c**2-2*c*e+e**2+g**2-2*g*j+j**2)*(-(a**2)+b**2-2*b*d+d**2+f**2-2*f*h+h**2))-2*b*c+2*b*e+2*c*d-2*d*e-2*f*g+2*f*j+2*g*h-2*h*j)/(2*(c**2-2*c*e+e**2+g**2-2*g*j+j**2));\n\n  if (Number.isNaN(time) || !Number.isFinite(time) || time < 0 || time > 1) {\n    return null;\n  }\n\n  return {\n    edge: true,\n    time,\n    point: {\n      x: point.x + point.xVelocity * time,\n      y: point.y + point.yVelocity * time,\n    },\n  };\n}\n\nfunction dist(p1: Point, p2: Point) {\n  return Math.sqrt((p2.x - p1.x) ** 2 + (p2.y - p1.y) ** 2);\n}\n"],
  "mappings": "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",
  "names": ["zMultiplier", "getY", "hitPoint", "landX", "x1", "y1", "x2", "y2", "b", "c", "width", "xBounded", "getBallZ", "ballX", "hitX", "hitZ", "aDenominator", "z", "getCircleLineIntercept", "circle", "line", "getEdgeIntercept", "edge1Intercept", "getCirclePointIntercept", "edge2Intercept", "a", "d", "e", "f", "g", "h", "i", "j", "k", "time", "lineInterceptP1", "lineInterceptP2", "angle", "point", "lineMidPoint", "dist", "p1", "p2"]
}
