Zilch.Bot=class h{params;lastBallX=0;lastBallY=0;lastBallComingTowardPaddle=!1;hasHitBall=!1;constructor(l){this.params=l}static start(l){return new h(l)}move(l){let s=p(l),e=this.params.botIndex===0,t=e?s.p1:s.p2,n=e?s.p2:s.p1,o=e?s.ball.x<this.lastBallX:s.ball.x>this.lastBallX;!o&&this.lastBallComingTowardPaddle&&(this.hasHitBall=!0);let a="none";if(this.params.type==="practice")if(Math.random()<.5&&this.hasHitBall){let r=["south","north","east","west"];a=r[Math.floor(Math.random()*r.length)]}else Math.abs(s.ball.y-t.y)<2?a="none":s.ball.y<t.y?a="south":a="north";else this.params.type==="boss-easy"?Math.abs(s.ball.y-t.y)<2?a="none":s.ball.y<t.y?a="south":a="north":this.params.type==="boss-medium"?o?Math.abs(t.y-s.ball.y)<1?(e?t.x<-5:t.x>5)?a=e?"west":"east":a="none":t.y>s.ball.y?a="south":a="north":Math.abs(t.y)>2?a=t.y>0?"south":"north":Math.abs(t.x)<40?a=e?"east":"west":a="none":this.params.type=="boss-hard"&&(o?Math.abs(s.ball.y-t.y)<1?a="none":s.ball.y<t.y?a="south":a="north":Math.abs(t.x)>10&&Math.abs(t.x-n.x)>30?a=e?"west":"east":Math.abs(t.y)>2?a=t.y>0?"south":"north":a="none");return this.lastBallComingTowardPaddle=o,this.lastBallX=s.ball.x,this.lastBallY=s.ball.y,a}end(l){}};function p(y){let l=y.split(",");if(l.length!==6)throw new Error("Unexpected payload");let[s,e,t,n,o,a]=l.map(r=>{let i=parseFloat(r);if(isNaN(i))throw new Error("Unexpected payload");return i});return{p1:{x:s,y:e},p2:{x:t,y:n},ball:{x:o,y:a}}}
//# sourceMappingURL=bot.js.map
