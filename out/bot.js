Zilch.Bot=class m{params;lastPaddleY=0;lastBallX=0;lastBallY=0;ballHitCount=0;lastBallComingTowardPaddle=!1;moveTowardNet=!1;constructor(e){this.params=e}static start(e){return new m(e)}move(e){let s=y(e),n=this.params.botIndex===0,a=n?s.p1:s.p2,l={x:s.ball.x-this.lastBallX,y:s.ball.y-this.lastBallY},r=n?l.x<0:l.x>0;!r&&this.lastBallComingTowardPaddle&&this.ballHitCount++;let t="none";if(this.params.type==="practice"&&this.ballHitCount>0||this.params.type==="boss-easy"&&this.ballHitCount>2||this.params.type==="boss-medium"&&this.ballHitCount>14)if(this.params.type==="practice"&&Math.random()<.5){let o=["north","south","east","west","none"];t=o[Math.floor(Math.random()*o.length)]}else r?Math.abs(s.ball.y-a.y)<1?t="none":s.ball.y<a.y?t="south":s.ball.y>a.y?t="north":t="none":t="none";else if(r){let o=l.x===0?0:-l.y/l.x,i=s.ball.x*o+s.ball.y,h=-o*a.x+i;this.moveTowardNet=Math.random()>.5,Math.abs(h-a.y)<1.5?t="none":h<a.y?t="south":h>a.y?t="north":t="none"}else a.y>1?t="south":a.y<-1?t="north":this.params.type!=="boss-easy"&&!this.moveTowardNet&&Math.abs(a.x)<38?t=n?"east":"west":this.params.type!=="boss-easy"&&this.moveTowardNet&&Math.abs(a.x)>20?t=n?"west":"east":t="none";return this.lastBallComingTowardPaddle=r,this.lastBallX=s.ball.x,this.lastBallY=s.ball.y,this.lastPaddleY=a.y,t}end(e){}};function y(p){let e=p.split(",");if(e.length!==6)throw new Error("Unexpected payload");let[s,n,a,l,r,t]=e.map(o=>{let i=parseFloat(o);if(isNaN(i))throw new Error("Unexpected payload");return i});return{p1:{x:s,y:n},p2:{x:a,y:l},ball:{x:r,y:t}}}
//# sourceMappingURL=bot.js.map
