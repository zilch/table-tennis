Zilch.Bot=class i{params;lastPaddleY=0;lastBallX=0;lastBallY=0;ballHitCount=0;lastBallComingTowardPaddle=!1;moveTowardNet=!1;constructor(e){this.params=e}static start(e){return new i(e)}move(e){let a=h(e),n=this.params.botIndex===0,s={x:a.ball.x-this.lastBallX,y:a.ball.y-this.lastBallY},o=n?s.x<0:s.x>0;!o&&this.lastBallComingTowardPaddle&&this.ballHitCount++;let t="none";if(this.params.type==="practice"&&this.ballHitCount>0||this.params.type==="boss-easy"&&this.ballHitCount>2||this.params.type==="boss-medium"&&this.ballHitCount>14)if(this.params.type==="practice"&&Math.random()<.5){let l=["north","south","east","west","none"];t=l[Math.floor(Math.random()*l.length)]}else o?Math.abs(a.ball.y-a.paddle.y)<1?t="none":a.ball.y<a.paddle.y?t="south":a.ball.y>a.paddle.y?t="north":t="none":t="none";else if(o){let l=s.x===0?0:-s.y/s.x,p=a.ball.x*l+a.ball.y,r=-l*a.paddle.x+p;this.moveTowardNet=Math.random()>.5,Math.abs(r-a.paddle.y)<1.5?t="none":r<a.paddle.y?t="south":r>a.paddle.y?t="north":t="none"}else a.paddle.y>1?t="south":a.paddle.y<-1?t="north":this.params.type!=="boss-easy"&&!this.moveTowardNet&&Math.abs(a.paddle.x)<38?t=n?"west":"east":this.params.type!=="boss-easy"&&this.moveTowardNet&&Math.abs(a.paddle.x)>20?t=n?"east":"west":t="none";return this.lastBallComingTowardPaddle=o,this.lastBallX=a.ball.x,this.lastBallY=a.ball.y,this.lastPaddleY=a.paddle.y,t}end(e){}};function h(d){let e=d.split(",");if(e.length!==4)throw new Error("Unexpected payload");let[a,n,s,o]=e.map(t=>{let l=parseFloat(t);if(isNaN(l))throw new Error("Unexpected payload");return l});return{paddle:{x:a,y:n},ball:{x:s,y:o}}}
//# sourceMappingURL=bot.js.map
