{
  "version": 3,
  "sources": ["../../src/config.ts"],
  "sourcesContent": ["import { Color3 } from \"@babylonjs/core\";\nimport { FromSchema, JSONSchema } from \"json-schema-to-ts\";\nimport { ZilchNamespace } from \"zilch-game-engine\";\nimport { Move } from \"./play\";\n\n/**\n * User facing config schema\n */\ntype RawConfig = FromSchema<typeof configSchema>;\n\nexport interface Config {\n  serveTo: \"east\" | \"west\" | \"random\";\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface Ball {\n  speed: number;\n  angle: number;\n  position: Point;\n  hit: Hit;\n  intercept: Point | null;\n}\n\nexport interface Player {\n  wins: number;\n  position: Point;\n  lastMove: Move;\n}\n\ninterface CircleAnnotation {\n  x: number;\n  y: number;\n  z: number;\n  radius: number;\n  color: Color3;\n}\n\nexport interface Hit {\n  hitX: number;\n  hitZ: number;\n  landX: number;\n}\n\nexport interface State {\n  index: number;\n  p1: Player;\n  p2: Player;\n  ball: Ball;\n  lastBall: Ball | null;\n  annotations: CircleAnnotation[];\n}\n\ndeclare global {\n  const Zilch: ZilchNamespace<RawConfig, Config, State>;\n}\n\n/**\n * Schema for the JSON users can input as part of\n * game setup.\n */\nconst configSchema = {\n  type: \"object\",\n  required: [\"serveTo\"],\n  properties: {\n    serveTo: {\n      description:\n        \"The direction the ball will start moving at the beginning of the game.\",\n      enum: [\"east\", \"west\", \"random\"],\n    },\n  },\n} as const satisfies JSONSchema;\nZilch.configSchema = configSchema;\n\nZilch.configPresets = [\n  {\n    name: \"Standard\",\n    // prettier-ignore\n    value: `{\\n` +\n    `  // Serve to \"east\" or \"west\" paddle or \"random\"\\n` +\n    `  \"serveTo\": \"random\"\\n` +\n    `}\\n`,\n  },\n];\n\nZilch.parseConfig = (rawConfig) => {\n  return {\n    serveTo: rawConfig.serveTo,\n  };\n};\n\nZilch.serializeConfig = (config) => {\n  return config.serveTo.toString();\n};\n\nZilch.summarizeConfig = (config) => {\n  return `serve to ${config.serveTo} paddle`;\n};\n"],
  "mappings": "AAgEA,IAAMA,EAAe,CACnB,KAAM,SACN,SAAU,CAAC,SAAS,EACpB,WAAY,CACV,QAAS,CACP,YACE,yEACF,KAAM,CAAC,OAAQ,OAAQ,QAAQ,CACjC,CACF,CACF,EACA,MAAM,aAAeA,EAErB,MAAM,cAAgB,CACpB,CACE,KAAM,WAEN,MAAO;AAAA;AAAA;AAAA;AAAA,CAIT,CACF,EAEA,MAAM,YAAeC,IACZ,CACL,QAASA,EAAU,OACrB,GAGF,MAAM,gBAAmBC,GAChBA,EAAO,QAAQ,SAAS,EAGjC,MAAM,gBAAmBA,GAChB,YAAYA,EAAO",
  "names": ["configSchema", "rawConfig", "config"]
}
